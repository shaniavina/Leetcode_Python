# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseBetween(self, head, m, n):
        """
        :type head: ListNode
        :type m: int
        :type n: int
        :rtype: ListNode
        """
        if m == n:
            return head
        dummy = ListNode(-1)
        dummy.next = head
        pre = dummy
        i, j = 0, 0
        while i < (m - 1) and pre:
            pre = pre.next
            i += 1
        if not pre or not pre.next:
            return
        tail = pre.next
        
        while j < (n - m) and tail.next:
            tmp = tail.next
            tail.next = tmp.next
            tmp.next = pre.next
            pre.next = tmp
            j += 1
        return dummy.next
        
